#!/usr/bin/env python

"""
Tools Project
Copyright(c) 2018 Tools

This program is free software; you can redistribute it and/or modify it
under the terms and conditions of the GNU General Public License,
version 2, as published by the Free Software Foundation.

This program is distributed in the hope it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
more details.

You should have received a copy of the GNU General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.

The full GNU General Public License is included in this distribution in
the file called "COPYING".

Contact Information:
Kamal Heib <kamalheib1@gmail.com>
"""

import os
import re
import sys
from argparse import ArgumentParser

try:
    from git import Repo
except ImportError:
    print "Please Install GitPython Package (e.g. yum install GitPython)"
    sys.exit(1)


class git_backport(object):
    def get_parser(self):
        if not hasattr(self, 'parser'):
            self.parser = ArgumentParser()
        return self.parser

    def parse_args(self, args):
        self.Parser.add_argument('-b', '--bugzilla', help='Bugzilla number')
        self.Parser.add_argument('-d', '--dir', help='Directory to store the diff files', default='/tmp')
        self.Parser.add_argument('-f', '--file', help='File that include the change log', required=True)
        self.Parser.add_argument('-u', '--upstream_dir', help='Path to upstream kernel tree', required=True)
        self.Parser.add_argument('--hash', help='Insert hash into diff file name', action='store_true')
        self.Parser.add_argument('--debug', help='Enable debug prints', action='store_true')

        self.Parser.parse_args(namespace=self, args=args)

    def get_change_log_file(self):
        if not hasattr(self, 'change_log_file'):
            self.change_log_file = open(self.file)
        return self.change_log_file

    def close_change_log_file(self):
        if hasattr(self, 'change_log_file'):
            self.change_log_file.close()

    def get_upstream_repo(self):
        if not hasattr(self, 'upstream_repo'):
            self.upstream_repo = Repo(self.upstream_dir)
        return self.upstream_repo

    def get_user(self):
        if not hasattr(self, 'user'):
            name = self.UpstreamRepo.config_reader().get_value('user', 'name')
            email = self.UpstreamRepo.config_reader().get_value('user', 'email')
            self.user = "%s <%s>" % (name, email)
        return self.user

    def create_diff_file(self, commit, idx):
        diff_name = '{:04d}'.format(idx)
        diff_file = open(self.dir + os.sep + diff_name + '.diff', 'w+')
        out = "From: %s\n\nSubject: %s\n\n" % (self.User, commit.summary)
        if self.bugzilla:
            out += "Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=%s\n\n" % self.bugzilla
        out += "%s" % self.UpstreamRepo.git.show(commit.hexsha)
        diff_file.write(out)
        diff_file.close()

    def execute(self, args):
        self.parse_args(args)

        idx = 1
        for line in self.ChangeLogFile.readlines():
            match = re.search("(^[0-9a-f]+) # ([^:]*: .*)", line.strip())
            if match:
                commit = self.UpstreamRepo.commit(match.group(1))
                self.create_diff_file(commit, idx)
                idx += 1

        self.close_change_log_file()

    User = property(get_user)
    Parser = property(get_parser)
    UpstreamRepo = property(get_upstream_repo)
    ChangeLogFile = property(get_change_log_file)


if __name__ == '__main__':
    git_backport = git_backport()
    git_backport.execute(sys.argv[1:])
